using System.Security.Cryptography;
using System.Text;

namespace MyFlat
{
    static public class Config
    {
        static public string GlobusUser
        {
            get
            {
                var bytes = new byte[]
                    {
                        1, 0, 0, 0, 208, 140, 157, 223, 1, 21, 209, 17, 140, 122, 0, 192, 79, 194, 151,
                        235, 1, 0, 0, 0, 40, 108, 47, 60, 251, 141, 182, 70, 188, 239, 189, 129, 92,
                        101, 108, 84, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 16, 102, 0, 0, 0, 1, 0, 0, 32, 0,
                        0, 0, 100, 114, 156, 97, 212, 55, 172, 107, 206, 212, 87, 115, 62, 233, 84,
                        180, 51, 131, 94, 35, 247, 106, 106, 183, 165, 66, 154, 87, 245, 171, 187, 16,
                        0, 0, 0, 0, 14, 128, 0, 0, 0, 2, 0, 0, 32, 0, 0, 0, 155, 70, 219, 199, 208,
                        167, 87, 149, 136, 103, 221, 114, 27, 236, 102, 49, 147, 169, 60, 126, 52,
                        16, 51, 217, 78, 152, 69, 178, 41, 163, 87, 161, 32, 0, 0, 0, 12, 52, 245, 62,
                        22, 146, 107, 154, 162, 30, 31, 225, 225, 9, 95, 77, 175, 33, 216, 82, 72, 80,
                        134, 144, 8, 35, 184, 122, 162, 218, 60, 138, 64, 0, 0, 0, 140, 23, 66, 202,
                        14, 214, 208, 219, 76, 226, 62, 120, 242, 234, 18, 143, 103, 219, 99, 239, 40,
                        154, 200, 25, 155, 192, 109, 213, 129, 197, 144, 222, 199, 5, 180, 57, 73, 23,
                        180, 106, 63, 135, 153, 140, 139, 61, 36, 154, 32, 183, 239, 210, 68, 128, 190,
                        232, 194, 207, 119, 24, 198, 179, 98, 30
                    };

                return Encoding.ASCII.GetString(
                    ProtectedData.Unprotect(bytes, null, DataProtectionScope.LocalMachine));
            }
        }

        static public string GlobusPassword
        {
            get
            {
                var bytes = new byte[]
                    {
                        1, 0, 0, 0, 208, 140, 157, 223, 1, 21, 209, 17, 140, 122, 0, 192, 79, 194, 151,
                        235, 1, 0, 0, 0, 40, 108, 47, 60, 251, 141, 182, 70, 188, 239, 189, 129, 92,
                        101, 108, 84, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 16, 102, 0, 0, 0, 1, 0, 0, 32, 0,
                        0, 0, 84, 80, 217, 254, 86, 149, 212, 120, 236, 30, 155, 92, 91, 125, 162, 157,
                        202, 0, 231, 158, 97, 196, 66, 41, 206, 191, 249, 72, 53, 149, 193, 192, 0, 0,
                        0, 0, 14, 128, 0, 0, 0, 2, 0, 0, 32, 0, 0, 0, 80, 187, 254, 213, 138, 128, 16,
                        191, 130, 95, 75, 16, 71, 168, 154, 157, 136, 41, 93, 213, 156, 191, 55, 19,
                        48, 149, 61, 182, 169, 2, 196, 110, 16, 0, 0, 0, 78, 21, 106, 53, 6, 235, 200,
                        7, 4, 236, 186, 220, 112, 128, 12, 179, 64, 0, 0, 0, 201, 183, 227, 123, 106,
                        204, 170, 121, 155, 29, 84, 100, 180, 111, 16, 250, 191, 190, 9, 243, 158, 151,
                        57, 8, 75, 99, 204, 169, 79, 44, 32, 160, 76, 17, 133, 242, 174, 45, 70, 191,
                        158, 89, 191, 145, 138, 49, 107, 25, 208, 242, 34, 43, 134, 101, 150, 232, 221,
                        32, 21, 47, 173, 193, 96, 88
                    };

                return Encoding.ASCII.GetString(
                    ProtectedData.Unprotect(bytes, null, DataProtectionScope.LocalMachine));
            }
        }

        static public string MosOblEircUser
        {
            get
            {
                var bytes = new byte[]
                    {
                        1, 0, 0, 0, 208, 140, 157, 223, 1, 21, 209, 17, 140, 122, 0, 192, 79, 194, 151,
                        235, 1, 0, 0, 0, 40, 108, 47, 60, 251, 141, 182, 70, 188, 239, 189, 129, 92, 101,
                        108, 84, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 16, 102, 0, 0, 0, 1, 0, 0, 32, 0, 0, 0, 122,
                        184, 193, 153, 247, 95, 55, 213, 123, 151, 203, 146, 213, 33, 59, 167, 137, 154,
                        103, 186, 112, 57, 139, 57, 105, 31, 87, 188, 9, 67, 156, 56, 0, 0, 0, 0, 14, 128,
                        0, 0, 0, 2, 0, 0, 32, 0, 0, 0, 11, 201, 118, 120, 143, 165, 214, 236, 132, 234, 74,
                        203, 253, 128, 89, 44, 18, 122, 236, 169, 233, 53, 203, 172, 130, 17, 42, 107, 174,
                        75, 233, 243, 16, 0, 0, 0, 30, 204, 123, 212, 210, 132, 23, 242, 155, 181, 0, 218,
                        30, 7, 104, 88, 64, 0, 0, 0, 123, 194, 218, 162, 116, 28, 173, 47, 130, 6, 143,
                        207, 103, 254, 64, 124, 152, 247, 70, 223, 26, 153, 190, 127, 234, 82, 56, 26, 192,
                        251, 215, 3, 79, 7, 198, 182, 242, 236, 16, 207, 8, 19, 43, 131, 78, 87, 161, 47,
                        93, 5, 129, 195, 148, 199, 170, 76, 177, 176, 198, 140, 92, 59, 25, 125
                    };

                return Encoding.ASCII.GetString(
                    ProtectedData.Unprotect(bytes, null, DataProtectionScope.LocalMachine));
            }
        }

        static public string MosOblEircPassword
        {
            get
            {
                var bytes = new byte[]
                    {
                        1, 0, 0, 0, 208, 140, 157, 223, 1, 21, 209, 17, 140, 122, 0, 192, 79, 194, 151, 235,
                        1, 0, 0, 0, 40, 108, 47, 60, 251, 141, 182, 70, 188, 239, 189, 129, 92, 101, 108,
                        84, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 16, 102, 0, 0, 0, 1, 0, 0, 32, 0, 0, 0, 145, 22,
                        107, 139, 69, 71, 103, 72, 143, 196, 57, 192, 223, 221, 41, 247, 7, 253, 133, 66,
                        56, 207, 136, 57, 43, 62, 247, 180, 27, 48, 29, 201, 0, 0, 0, 0, 14, 128, 0, 0, 0,
                        2, 0, 0, 32, 0, 0, 0, 95, 43, 38, 97, 171, 255, 57, 65, 14, 64, 63, 119, 157, 52,
                        26, 75, 146, 40, 121, 184, 81, 51, 220, 184, 63, 140, 51, 88, 129, 71, 108, 24, 16,
                        0, 0, 0, 159, 140, 12, 61, 241, 103, 233, 44, 200, 12, 239, 119, 163, 75, 26, 185,
                        64, 0, 0, 0, 241, 213, 31, 6, 53, 62, 152, 23, 101, 141, 39, 53, 193, 45, 91, 240,
                        181, 198, 6, 57, 161, 47, 124, 20, 8, 92, 186, 224, 85, 235, 96, 224, 135, 31, 122,
                        129, 135, 171, 28, 250, 1, 230, 160, 154, 202, 208, 204, 199, 233, 109, 8, 105,
                        174, 171, 117, 254, 119, 144, 69, 87, 48, 240, 24, 90
                    };

                return Encoding.ASCII.GetString(
                    ProtectedData.Unprotect(bytes, null, DataProtectionScope.LocalMachine));
            }
        }
    }
}
